{"ast":null,"code":"export const drawParticle = (ctx, particle) => {\n  ctx.beginPath();\n  ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n  ctx.strokeStyle = particle.type === 'proton' ? '#ff0000' : particle.type === 'neutron' ? '#ffffff' : '#00ffff';\n  ctx.stroke();\n  if (particle.type !== 'electron') {\n    drawQuarks(ctx, particle);\n  }\n};\nconst drawQuarks = (ctx, particle) => {\n  const types = particle.type === 'proton' ? ['up', 'up', 'down'] : ['up', 'down', 'down'];\n  types.forEach((type, i) => {\n    const angle = i * 2 * Math.PI / 3;\n    const qx = particle.x + Math.cos(angle) * (particle.radius * 0.5);\n    const qy = particle.y + Math.sin(angle) * (particle.radius * 0.5);\n    ctx.beginPath();\n    ctx.arc(qx, qy, 5, 0, Math.PI * 2);\n    ctx.fillStyle = type === 'up' ? '#ff6b6b' : '#4ecdc4';\n    ctx.fill();\n  });\n};","map":{"version":3,"names":["drawParticle","ctx","particle","beginPath","arc","x","y","radius","Math","PI","strokeStyle","type","stroke","drawQuarks","types","forEach","i","angle","qx","cos","qy","sin","fillStyle","fill"],"sources":["C:/Users/Rod/Documents/GitHub/IA_Atomic_Particles/simulacion-atomica/src/utils/drawingUtils.ts"],"sourcesContent":["import { Particle } from '../models/Particle';\r\n\r\nexport const drawParticle = (ctx: CanvasRenderingContext2D, particle: Particle) => {\r\n    ctx.beginPath();\r\n    ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\r\n    ctx.strokeStyle = particle.type === 'proton' ? '#ff0000' : \r\n                     particle.type === 'neutron' ? '#ffffff' : '#00ffff';\r\n    ctx.stroke();\r\n\r\n    if (particle.type !== 'electron') {\r\n        drawQuarks(ctx, particle);\r\n    }\r\n};\r\n\r\nconst drawQuarks = (ctx: CanvasRenderingContext2D, particle: Particle) => {\r\n    const types = particle.type === 'proton' ? ['up', 'up', 'down'] : ['up', 'down', 'down'];\r\n    \r\n    types.forEach((type, i) => {\r\n        const angle = (i * 2 * Math.PI) / 3;\r\n        const qx = particle.x + Math.cos(angle) * (particle.radius * 0.5);\r\n        const qy = particle.y + Math.sin(angle) * (particle.radius * 0.5);\r\n        \r\n        ctx.beginPath();\r\n        ctx.arc(qx, qy, 5, 0, Math.PI * 2);\r\n        ctx.fillStyle = type === 'up' ? '#ff6b6b' : '#4ecdc4';\r\n        ctx.fill();\r\n    });\r\n}; "],"mappings":"AAEA,OAAO,MAAMA,YAAY,GAAGA,CAACC,GAA6B,EAAEC,QAAkB,KAAK;EAC/ED,GAAG,CAACE,SAAS,CAAC,CAAC;EACfF,GAAG,CAACG,GAAG,CAACF,QAAQ,CAACG,CAAC,EAAEH,QAAQ,CAACI,CAAC,EAAEJ,QAAQ,CAACK,MAAM,EAAE,CAAC,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;EAChER,GAAG,CAACS,WAAW,GAAGR,QAAQ,CAACS,IAAI,KAAK,QAAQ,GAAG,SAAS,GACvCT,QAAQ,CAACS,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;EACpEV,GAAG,CAACW,MAAM,CAAC,CAAC;EAEZ,IAAIV,QAAQ,CAACS,IAAI,KAAK,UAAU,EAAE;IAC9BE,UAAU,CAACZ,GAAG,EAAEC,QAAQ,CAAC;EAC7B;AACJ,CAAC;AAED,MAAMW,UAAU,GAAGA,CAACZ,GAA6B,EAAEC,QAAkB,KAAK;EACtE,MAAMY,KAAK,GAAGZ,QAAQ,CAACS,IAAI,KAAK,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;EAExFG,KAAK,CAACC,OAAO,CAAC,CAACJ,IAAI,EAAEK,CAAC,KAAK;IACvB,MAAMC,KAAK,GAAID,CAAC,GAAG,CAAC,GAAGR,IAAI,CAACC,EAAE,GAAI,CAAC;IACnC,MAAMS,EAAE,GAAGhB,QAAQ,CAACG,CAAC,GAAGG,IAAI,CAACW,GAAG,CAACF,KAAK,CAAC,IAAIf,QAAQ,CAACK,MAAM,GAAG,GAAG,CAAC;IACjE,MAAMa,EAAE,GAAGlB,QAAQ,CAACI,CAAC,GAAGE,IAAI,CAACa,GAAG,CAACJ,KAAK,CAAC,IAAIf,QAAQ,CAACK,MAAM,GAAG,GAAG,CAAC;IAEjEN,GAAG,CAACE,SAAS,CAAC,CAAC;IACfF,GAAG,CAACG,GAAG,CAACc,EAAE,EAAEE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAEZ,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;IAClCR,GAAG,CAACqB,SAAS,GAAGX,IAAI,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;IACrDV,GAAG,CAACsB,IAAI,CAAC,CAAC;EACd,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}