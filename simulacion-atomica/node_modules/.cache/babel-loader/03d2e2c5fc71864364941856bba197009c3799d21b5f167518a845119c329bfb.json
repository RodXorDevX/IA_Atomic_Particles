{"ast":null,"code":"export class Particle {\n  constructor({\n    x,\n    y,\n    type,\n    orbitalType = 'none',\n    radius,\n    charge,\n    mass,\n    dx = (Math.random() - 0.5) * 2,\n    dy = (Math.random() - 0.5) * 2\n  }) {\n    this.x = void 0;\n    this.y = void 0;\n    this.type = void 0;\n    this.orbitalType = void 0;\n    this.radius = void 0;\n    this.charge = void 0;\n    this.mass = void 0;\n    this.dx = void 0;\n    this.dy = void 0;\n    this.x = x;\n    this.y = y;\n    this.type = type;\n    this.orbitalType = orbitalType;\n    this.radius = radius || (type === 'electron' ? 10 : 20);\n    this.charge = charge || (type === 'proton' ? 1 : type === 'electron' ? -1 : 0);\n    this.mass = mass || (type === 'electron' ? 0.0005 : 3.0);\n    this.dx = dx;\n    this.dy = dy;\n  }\n  update(canvasWidth, canvasHeight, damping) {\n    // Colisiones con bordes\n    if (this.x + this.radius > canvasWidth) {\n      this.x = canvasWidth - this.radius;\n      this.dx *= -0.9;\n    }\n    if (this.x - this.radius < 0) {\n      this.x = this.radius;\n      this.dx *= -0.9;\n    }\n    if (this.y + this.radius > canvasHeight) {\n      this.y = canvasHeight - this.radius;\n      this.dy *= -0.9;\n    }\n    if (this.y - this.radius < 0) {\n      this.y = this.radius;\n      this.dy *= -0.9;\n    }\n\n    // Actualizar posici贸n\n    this.x += this.dx;\n    this.y += this.dy;\n\n    // Aplicar amortiguaci贸n\n    this.dx *= damping;\n    this.dy *= damping;\n  }\n}","map":{"version":3,"names":["Particle","constructor","x","y","type","orbitalType","radius","charge","mass","dx","Math","random","dy","update","canvasWidth","canvasHeight","damping"],"sources":["C:/Users/Rod/Documents/GitHub/IA_Atomic_Particles/simulacion-atomica/src/models/Particle.ts"],"sourcesContent":["export type ParticleType = 'proton' | 'neutron' | 'electron';\r\nexport type OrbitalType = 'none' | 's' | 'p' | 'd' | 'f' | 'g';\r\n\r\nexport interface ParticleProps {\r\n    x: number;\r\n    y: number;\r\n    type: ParticleType;\r\n    orbitalType?: OrbitalType;\r\n    radius?: number;\r\n    charge?: number;\r\n    mass?: number;\r\n    dx?: number;\r\n    dy?: number;\r\n}\r\n\r\nexport class Particle {\r\n    x: number;\r\n    y: number;\r\n    type: ParticleType;\r\n    orbitalType: OrbitalType;\r\n    radius: number;\r\n    charge: number;\r\n    mass: number;\r\n    dx: number;\r\n    dy: number;\r\n\r\n    constructor({\r\n        x,\r\n        y,\r\n        type,\r\n        orbitalType = 'none',\r\n        radius,\r\n        charge,\r\n        mass,\r\n        dx = (Math.random() - 0.5) * 2,\r\n        dy = (Math.random() - 0.5) * 2\r\n    }: ParticleProps) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = type;\r\n        this.orbitalType = orbitalType;\r\n        this.radius = radius || (type === 'electron' ? 10 : 20);\r\n        this.charge = charge || (type === 'proton' ? 1 : type === 'electron' ? -1 : 0);\r\n        this.mass = mass || (type === 'electron' ? 0.0005 : 3.0);\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n    }\r\n\r\n    update(canvasWidth: number, canvasHeight: number, damping: number): void {\r\n        // Colisiones con bordes\r\n        if (this.x + this.radius > canvasWidth) {\r\n            this.x = canvasWidth - this.radius;\r\n            this.dx *= -0.9;\r\n        }\r\n        if (this.x - this.radius < 0) {\r\n            this.x = this.radius;\r\n            this.dx *= -0.9;\r\n        }\r\n        if (this.y + this.radius > canvasHeight) {\r\n            this.y = canvasHeight - this.radius;\r\n            this.dy *= -0.9;\r\n        }\r\n        if (this.y - this.radius < 0) {\r\n            this.y = this.radius;\r\n            this.dy *= -0.9;\r\n        }\r\n\r\n        // Actualizar posici贸n\r\n        this.x += this.dx;\r\n        this.y += this.dy;\r\n\r\n        // Aplicar amortiguaci贸n\r\n        this.dx *= damping;\r\n        this.dy *= damping;\r\n    }\r\n} "],"mappings":"AAeA,OAAO,MAAMA,QAAQ,CAAC;EAWlBC,WAAWA,CAAC;IACRC,CAAC;IACDC,CAAC;IACDC,IAAI;IACJC,WAAW,GAAG,MAAM;IACpBC,MAAM;IACNC,MAAM;IACNC,IAAI;IACJC,EAAE,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;IAC9BC,EAAE,GAAG,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI;EAClB,CAAC,EAAE;IAAA,KApBlBT,CAAC;IAAA,KACDC,CAAC;IAAA,KACDC,IAAI;IAAA,KACJC,WAAW;IAAA,KACXC,MAAM;IAAA,KACNC,MAAM;IAAA,KACNC,IAAI;IAAA,KACJC,EAAE;IAAA,KACFG,EAAE;IAaE,IAAI,CAACV,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,MAAM,GAAGA,MAAM,KAAKF,IAAI,KAAK,UAAU,GAAG,EAAE,GAAG,EAAE,CAAC;IACvD,IAAI,CAACG,MAAM,GAAGA,MAAM,KAAKH,IAAI,KAAK,QAAQ,GAAG,CAAC,GAAGA,IAAI,KAAK,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9E,IAAI,CAACI,IAAI,GAAGA,IAAI,KAAKJ,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,GAAG,CAAC;IACxD,IAAI,CAACK,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACG,EAAE,GAAGA,EAAE;EAChB;EAEAC,MAAMA,CAACC,WAAmB,EAAEC,YAAoB,EAAEC,OAAe,EAAQ;IACrE;IACA,IAAI,IAAI,CAACd,CAAC,GAAG,IAAI,CAACI,MAAM,GAAGQ,WAAW,EAAE;MACpC,IAAI,CAACZ,CAAC,GAAGY,WAAW,GAAG,IAAI,CAACR,MAAM;MAClC,IAAI,CAACG,EAAE,IAAI,CAAC,GAAG;IACnB;IACA,IAAI,IAAI,CAACP,CAAC,GAAG,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACJ,CAAC,GAAG,IAAI,CAACI,MAAM;MACpB,IAAI,CAACG,EAAE,IAAI,CAAC,GAAG;IACnB;IACA,IAAI,IAAI,CAACN,CAAC,GAAG,IAAI,CAACG,MAAM,GAAGS,YAAY,EAAE;MACrC,IAAI,CAACZ,CAAC,GAAGY,YAAY,GAAG,IAAI,CAACT,MAAM;MACnC,IAAI,CAACM,EAAE,IAAI,CAAC,GAAG;IACnB;IACA,IAAI,IAAI,CAACT,CAAC,GAAG,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACH,CAAC,GAAG,IAAI,CAACG,MAAM;MACpB,IAAI,CAACM,EAAE,IAAI,CAAC,GAAG;IACnB;;IAEA;IACA,IAAI,CAACV,CAAC,IAAI,IAAI,CAACO,EAAE;IACjB,IAAI,CAACN,CAAC,IAAI,IAAI,CAACS,EAAE;;IAEjB;IACA,IAAI,CAACH,EAAE,IAAIO,OAAO;IAClB,IAAI,CAACJ,EAAE,IAAII,OAAO;EACtB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}